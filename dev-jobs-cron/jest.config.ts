import type { Config } from '@jest/types';
import { defaults } from 'jest-config';

// Sync object
const config: Config.InitialOptions = {
    verbose: true,
    preset: 'ts-jest',
    testEnvironment: 'node',
    transform: {
        "\\.[jt]sx?$": "ts-jest",
    },
    automock: defaults.automock,
    bail: defaults.bail,
    cache: defaults.cache,
    cacheDirectory: defaults.cacheDirectory,
    ci: defaults.ci,
    clearMocks: defaults.clearMocks,
    changedFilesWithAncestor: defaults.changedFilesWithAncestor,
    collectCoverage: defaults.collectCoverage,
    coveragePathIgnorePatterns: defaults.coveragePathIgnorePatterns,
    detectLeaks: defaults.detectLeaks,
    detectOpenHandles: defaults.detectOpenHandles,
    expand: defaults.expand,
    forceCoverageMatch: defaults.forceCoverageMatch,
    injectGlobals: defaults.injectGlobals,
    listTests: defaults.listTests,
    moduleDirectories: defaults.moduleDirectories,
    moduleFileExtensions: defaults.moduleFileExtensions,
    moduleNameMapper: defaults.moduleNameMapper,
    modulePathIgnorePatterns: defaults.modulePathIgnorePatterns,
    noStackTrace: defaults.noStackTrace,
    notify: defaults.notify,
    notifyMode: defaults.notifyMode,
    passWithNoTests: defaults.passWithNoTests,
    prettierPath: defaults.prettierPath,
    resetMocks: defaults.resetMocks,
    resetModules: defaults.resetModules,
    restoreMocks: defaults.restoreMocks,
    roots: defaults.roots,
    runner: defaults.runner,
    runTestsByPath: defaults.runTestsByPath,
    setupFiles: defaults.setupFiles,
    setupFilesAfterEnv: defaults.setupFilesAfterEnv,
    skipFilter: defaults.skipFilter,
    slowTestThreshold: defaults.slowTestThreshold,
    snapshotSerializers: defaults.snapshotSerializers,
    errorOnDeprecated: defaults.errorOnDeprecated,
    testFailureExitCode: defaults.testFailureExitCode,
    testLocationInResults: defaults.testLocationInResults,
    testMatch: defaults.testMatch,
    testPathIgnorePatterns: defaults.testPathIgnorePatterns,
    testRegex: defaults.testRegex,
    testRunner: defaults.testRunner,
    testSequencer: defaults.testSequencer,
    transformIgnorePatterns: defaults.transformIgnorePatterns,
    watchPathIgnorePatterns: defaults.watchPathIgnorePatterns,
    useStderr: defaults.useStderr,
    watch: defaults.watch,
    watchman: defaults.watchman,
};

export default config;